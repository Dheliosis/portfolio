import { projectDetailsInterface } from "@/lib/projects"
import { getAllProjectsDetails, projectsDataInterface } from "@/lib/projects"
import Head from "next/head"
import Image from "next/image"
import router from "next/router"
import { useEffect, useState } from "react"


export default function Home() {
	const [projectsData, setProjectData] = useState({})

	useEffect(() => {
		const projectDetails: projectsDataInterface = getAllProjectsDetails()
		setProjectData(projectDetails)
	}, [])

	const adjectives = [
		{
			id: "dynamic",
			title: "Dynamique",
			text: "Lorem",
			image: "ee",
		},
		{
			id: "jovial",
			title: "Joviale",
			text: "Lorem",
			image: "ee",
		},
		{
			id: "involved",
			title: "Impliquée",
			text: "Lorem",
			image: "ee",
		},
		{
			id: "curious",
			title: "Curieuse",
			text: "Lorem",
			image: "ee",
		},
		{
			id: "passionate",
			title: "Passionnée",
			text: "Lorem",
			image: "ee",
		},
	]

	const [currentAdjective, setCurrentAdjective] = useState(adjectives[0])

	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="flex flex-col">
				<div className="lg:h-screen lg:flex lg:items-center px-4 xl:px-96">
					<div>
						<h1 className="text-5xl font-bold mb-5">
							Caroline <span className="text-red-500">♦️</span>
						</h1>
						<ul className="flex overflow-auto">
							{adjectives.map(adjective => (
								<li key={adjective.id}
									className={`
										mr-8
										flex
										flex-col
										items-center
										${adjective.id === currentAdjective.id ?
										"text-white" : "text-dark-blue-light"}
									`}
									onClick={() => {
										setCurrentAdjective(adjective)
										document.getElementById(adjective.id).scrollIntoView({behavior:"smooth"})
									}}>
									<span className={currentAdjective.id === adjective.id ? "font-bold" : ""}>
										{adjective.title}
									</span>
									{adjective.id === currentAdjective.id ? (
										<span className="w-2 h-2 bg-white block rounded-full"/>
									) : null}
								</li>
							))}
						</ul>
						<ul className="mt-4 flex overflow-auto min-h-[25rem] snap-x items-center">
							{adjectives.map(adjective => (
								<li key={adjective.id}
									id={adjective.id}
									className={`
										mx-4
										bg-slate-400
										rounded-[20px]
										transition
										ease-in-out
										h-[22rem] min-w-[18rem]
										snap-center
										p-4
										flex
										flex-col
										justify-end
										${adjective.id === currentAdjective.id ?
										"scale-110 duration-300"
										: ""}
									`}>
										<p>{adjective.title}</p>
										<p>{adjective.text}</p>
								</li>
							))}
						</ul>
					</div>
					<div className="mb-5 mt-14">
						<div className="flex justify-between items-center mb-5">
							<h2 className="text-3xl font-bold">
								Projets
							</h2>
							<span
								className="text-dark-blue-light"
								onClick={() => {
									router.push("projects")
								}}>Voir plus</span>
						</div>
						{projectsData ? (
							<div className="flex overflow-auto">
								{Object.keys(projectsData).map((key: string) => (
									<div
										key={projectsData[key].title}
										className="flex flex-col items-center mr-6"
										onClick={() => {
											router.push(`projects/${projectsData[key].link}`)
										}}
									>
										<div
											className="
												min-h-[6rem]
												min-w-[6rem]
												bg-white
												rounded-full
												flex
												justify-center
												items-center
											">
											<Image
												src={projectsData[key].icon}
												alt={projectsData[key].title}
												width={60}
												height={80}
											/>
										</div>
										<h3>{projectsData[key].title}</h3>
									</div>
								))}

							</div>
						) : null}
					</div>
				</div>
			</main>
		</>
	)
}
